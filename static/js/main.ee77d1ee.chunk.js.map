{"version":3,"sources":["Componens/Dialogs/Dialogs.module.css","Componens/Dialogs/Message/Message.module.css","Componens/Dialogs/DialogsItems/DialogsItem.module.css","Componens/Header/Header.module.css","Componens/Profile/ProfileInfo/ProfileInfo.module.css","Componens/Profile/Posts/MyPosts/MyPosts.module.css","Componens/Profile/Posts/MyPosts/Post/Posts.module.css","Componens/Users/Users.module.css","Componens/Navbar/Navbar.module.css","reportWebVitals.ts","Componens/Header/Header.tsx","Componens/Navbar/Navbar.tsx","Componens/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profilePageReducer.tsx","Componens/Profile/Posts/MyPosts/Post/Posts.tsx","Componens/Profile/Posts/MyPosts/MyPostsContainer.tsx","Componens/Profile/Posts/MyPosts/MyPosts.tsx","Componens/Profile/Profile.tsx","Componens/News/News.tsx","Componens/Music/Music.tsx","Componens/Settings/Settings.tsx","Redux/dialogPageReducer.tsx","Componens/Dialogs/DialogsItems/DialogsItem.tsx","Componens/Dialogs/Message/Message.tsx","Componens/Dialogs/DialogsContainer.tsx","Componens/Dialogs/Dialogs.tsx","assets/images/user.png","Componens/Users/UsersOnClass.tsx","Redux/usersPageReducer.tsx","Componens/Users/UsersContainer.tsx","App.tsx","Redux/sidebarReducer.tsx","Redux/Redux-Store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","alt","Navbar","sidebar","item","to","activeClassName","activeLink","ProfileInfo","mydate","InitialState","newTextPost","myPostsData","id","v1","massage","likesCounts","ADD_POST_CALLBACK","UPDATE_NEW_POST_TEXT","Posts","props","MyPostsContainer","connect","state","profilePage","dispatch","updateNewPostText","text","type","newText","addPostCallback","newPost","postMessage","myPostsElements","map","p","validatedValue","trim","posts","value","onChange","e","currentTarget","onKeyPress","key","onClick","Profile","content","News","Music","Settings","dialogsData","name","avatar","newTextMassages","massagesData","ADD_MESSAGE_CALLBACK","UPDATE_NEW_MESSAGE_TEXT","Dialog","path","dialog","Message","message","angle","textArea","DialogsContainer","dialogPage","updateNewMessageText","newMessage","addMessageCallback","dialogElements","d","dialogMessage","dialogs","dialogsItems","messeges","placeholder","Users","axios","get","response","setUsers","data","items","this","users","u","photos","small","userPhoto","followed","unfollow","follow","status","React","Component","FOLLOW","UNFOLLOW","SET_USERS","UsersContainer","usersPage","userID","followAC","unfollowAC","setUsersAC","App","render","friendsData","Reducers","combineReducers","action","store","createStore","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.ee77d1ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Vx-t\",\"dialogsItems\":\"Dialogs_dialogsItems__2HfqF\",\"dialog\":\"Dialogs_dialog__u9dsJ\",\"active\":\"Dialogs_active__ltnZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1udRW\",\"angle\":\"Message_angle__3bG17\",\"textArea\":\"Message_textArea__lm1Ke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__2Fj15\",\"name\":\"DialogsItem_name__1n45g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2F04D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mydate\":\"ProfileInfo_mydate__wMFWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2H1K1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__VfFga\",\"active\":\"Posts_active__23wSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__5KIGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__1wpjc\",\"item\":\"Navbar_item__2ZLbJ\",\"activeLink\":\"Navbar_activeLink__2YsRQ\",\"blockFriends\":\"Navbar_blockFriends__20-rz\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport s from \"./Header.module.css\";\n\n\nexport const Header  = () => {\n    return (\n        <header className={s.header}>\n          <img src=\"http://htmlbook.ru/files/images/layout2/6-05.png\" alt=\"welcome\"/>\n        </header>\n    );\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Navbar.module.css';\n\n\nexport const Navbar = () => {\n    return (\n        <nav className={s.sidebar}> {/*Sidebar*/}\n            <div className={s.item}>\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            {/*<div className={s.item}>*/}\n            {/*    <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>*/}\n            {/*</div>*/}\n            {/*<div className={s.blockFriends} >*/}\n            {/*   <BlockFriends friendsData={props.friendsData} />*/}\n            {/*</div>*/}\n        </nav>\n\n\n\n\n    );\n}\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nexport const ProfileInfo = () => {\n    return (\n        <div className={s.mydate}>\n            <div>Avatar</div>\n            <div>Description</div>\n        </div>\n\n    );\n}\n","import {v1} from 'uuid';\r\nimport {ActionType, MyPostsDataType, ProfilePage} from './Store';\r\n\r\nlet InitialState = {\r\n    newTextPost: '',\r\n    myPostsData: [\r\n        {id: v1(), massage: 'Hi, how are you?', likesCounts: 12},\r\n        {id: v1(), massage: 'It is my first post!', likesCounts: 15},\r\n        {id: v1(), massage: 'hey!', likesCounts: 1},\r\n    ]\r\n}\r\n\r\nconst ADD_POST_CALLBACK = 'ADD-POST-CALLBACK' as const;\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT' as const;\r\nexport const profilePageReducer = (state: ProfilePage = InitialState, action: ActionType):ProfilePage => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST_CALLBACK: {\r\n            const newPost: MyPostsDataType = {\r\n                id: v1(),\r\n                massage: action.postMessage,\r\n                likesCounts: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                myPostsData: [...state.myPostsData, newPost]\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newTextPost: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostCallbackAC = (postMessage: string) => {\r\n    return {\r\n        type: ADD_POST_CALLBACK,\r\n        postMessage: postMessage\r\n    } as const\r\n}\r\nexport const updateNewPostTextAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: newText\r\n    } as const\r\n\r\n}\r\nexport type AddPostCallbackActionType = ReturnType<typeof addPostCallbackAC>\r\nexport type UpdateNewPostTextActionType = ReturnType<typeof updateNewPostTextAC>","import React from 'react';\nimport s from './Posts.module.css';\n\ntype PropsPostsType = {\n    massage: string,\n    likesCounts: number\n}\n\nexport const Posts = (props: PropsPostsType) => {\n    return (\n\n\n        <div className={s.item}>\n            <img\n                src=\"https://i.mycdn.me/i?r=AzEOxUXG5QgodWC3x6hM10Ckx0BZLGOfgD6nXhJoLZbA4MAmq-mVtRg1TeCwydjhl-Q&fn=sqr_288\"/>\n            <span> {props.massage}</span>\n            <div>\n                <span><button>Like</button></span>\n                <span><button>{props.likesCounts}</button></span>\n            </div>\n\n        </div>\n\n    );\n}\n","import {addPostCallbackAC, updateNewPostTextAC} from '../../../../Redux/profilePageReducer';\nimport {MyPosts} from './MyPosts';\nimport {AppDispatch, AppStateType} from '../../../../Redux/Redux-Store';\nimport {connect} from 'react-redux';\n\n\n    let mapStateToProps = (state: AppStateType) => {\n        return {\n            myPostsData: state.profilePage.myPostsData,\n            newTextPost: state.profilePage.newTextPost\n        }\n    }\n\n    let mapDispatchToProps = (dispatch: AppDispatch) => {\n        return {\n            updateNewPostText: (text: string) => {\n                dispatch(updateNewPostTextAC(text))\n            },\n            addPostCallback: (newPost: string) => {\n                dispatch(addPostCallbackAC(newPost))\n            }\n        }\n\n    }\nexport  const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport {Posts} from './Post/Posts';\nimport {  MyPostsDataType, } from '../../../../Redux/Store';\n\n\n\ntype propsMyPostType = {\n    myPostsData: Array<MyPostsDataType>\n    newTextPost: string\n    addPostCallback:(newPost:string) =>void\n    updateNewPostText:(text:string) => void\n}\n\n\nexport const MyPosts = (props: propsMyPostType) => {\n\n    const myPostsElements = props.myPostsData.map(p =>\n        <Posts\n            key={p.id}\n            massage={p.massage}\n            likesCounts={p.likesCounts}\n        />)\n\n    /** addPostCallbackAC створення dispatch обєкту з параметром props.newTextPost */\n    const addPostCallback = () => {\n        let validatedValue = props.newTextPost.trim()\n        if (validatedValue) {\n            props.addPostCallback(validatedValue)\n        }\n        props.updateNewPostText('')\n\n    }\n    const onChangeKeyPress = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === 'Enter') {\n            addPostCallback()\n        }\n    }\n    /** Плохой тон писать props.dispatch(updateNewPostTextAC(e.currentTarget.value)) =>\n     *  либо через if(e.currentTarget) либо && */\n    const updateNewPostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        e.currentTarget &&\n        props.updateNewPostText(e.currentTarget.value)\n    }\n\n\n    return (\n\n        <div className={s.posts}>\n            <div>\n                My posts\n            </div>\n\n            <div>\n                    <textarea\n                        value={props.newTextPost}\n                        onChange={updateNewPostText}\n                        onKeyPress={onChangeKeyPress}\n\n                    />\n            </div>\n            <div>\n                <button onClick={addPostCallback}>send</button>\n            </div>\n\n            <div>\n                {myPostsElements}\n            </div>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport s from './Profile.module.css';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from './Posts/MyPosts/MyPostsContainer';\n\n\n\n\n\nexport const Profile = () => {\n    return (\n        <div className={s.content}> Main content\n            <ProfileInfo/>\n            <MyPostsContainer/>\n\n        </div>\n\n    );\n}\n","import React from 'react';\nimport s from './News.module.css'\n\nexport function News () {\n    return(\n        <div>\n            News\n        </div>\n    )\n}","import React from 'react';\nimport s from './Music.module.css'\n\nexport function Music () {\n    return(\n        <div>\n            Music\n        </div>\n    )\n}","import React from 'react';\nimport s from './Settings.module.css'\n\nexport function Settings () {\n    return(\n        <div >\n            Settings\n        </div>\n    )\n}","import {ActionType, DialogPage, MassagesDataType} from './Store';\r\nimport {v1} from 'uuid';\r\n\r\nconst InitialState = {\r\n\r\n    dialogsData: [\r\n        {\r\n            id: v1(),\r\n            name: 'Igor',\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/avatars/4/d0344a04087644befce78124c6277bb1-bpthumb.jpg',\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Maryna',\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/avatars/2/d1b23ad972e736b7c0510b288875c3b6-bpthumb.jpg',\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Ragnar',\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/avatars/4/d0344a04087644befce78124c6277bb1-bpthumb.jpg',\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Ruslan',\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/group-avatars/34/1c7da6471476e42b543812f35ef23d2f-bpthumb.jpg',\r\n        },\r\n    ],\r\n    newTextMassages: '',\r\n    massagesData: [\r\n        {id: v1(), massage: 'Hi!'},\r\n        {id: v1(), massage: 'How are you?'},\r\n        {id: v1(), massage: 'Hey!'},\r\n        {id: v1(), massage: 'Hello my friends'},\r\n\r\n    ]\r\n}\r\n\r\n\r\nconst ADD_MESSAGE_CALLBACK = 'ADD-MESSAGE-CALLBACK' as const\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT' as const\r\nexport const dialogPageReducer = (state: DialogPage = InitialState, action: ActionType):DialogPage => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE_CALLBACK: {\r\n            const newMessage: MassagesDataType = {\r\n                id: v1(),\r\n                massage: action.message,\r\n            }\r\n            return {\r\n                ...state,\r\n                newTextMassages: '',\r\n                massagesData: [...state.massagesData, newMessage]\r\n            }\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newTextMassages: action.newMessage\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport const addMessageCallbackAC = (message: string) => {\r\n    return {\r\n        type: ADD_MESSAGE_CALLBACK,\r\n        message: message\r\n    } as const\r\n}\r\nexport const updateNewMessageTextAC = (newMessage: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        newMessage: newMessage\r\n    } as const\r\n\r\n}\r\nexport type UpdateNewMessageTextActionType = ReturnType<typeof updateNewMessageTextAC>\r\nexport type AddMessageCallbackActionType = ReturnType<typeof addMessageCallbackAC>","import React from 'react';\nimport s from './DialogsItem.module.css'\nimport { NavLink } from 'react-router-dom';\n\ntype propsDialogType = {\n    id: string,\n    name: string,\n    avatar: string,\n}\n\nexport function Dialog(props: propsDialogType) {\n    let path = '/dialog/' + props.id\n    return (\n        <div className={s.dialog}>\n            <img src={props.avatar}/>\n            <NavLink to={path}><div className={s.name} >{props.name}</div></NavLink>\n        </div>\n    )\n}\n","import React from 'react';\nimport s from './Message.module.css'\n\ntype propsMessage = {\n    message: string,\n}\n\nexport const Message = (props: propsMessage) => {\n    return (\n        <div className={s.message}>\n            <div className={s.angle}></div>\n            <div className={s.textArea}>{props.message}</div>\n        </div>\n    )\n}\n","\nimport {addMessageCallbackAC, updateNewMessageTextAC} from '../../Redux/dialogPageReducer';\nimport {Dialogs} from './Dialogs';\nimport {connect} from 'react-redux';\nimport {AppDispatch, AppStateType} from '../../Redux/Redux-Store';\n\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogsData: state.dialogPage.dialogsData,\n        newTextMassages: state.dialogPage.newTextMassages,\n        massagesData: state.dialogPage.massagesData\n    }\n}\nlet mapDispatchToProps = (dispatch: AppDispatch) => {\n    return {\n        updateNewMessageText: (value: string) => {\n            dispatch(updateNewMessageTextAC(value))\n        },\n        addMessageCallback: (newText: string) => {\n            dispatch(addMessageCallbackAC(newText))\n        }\n    }\n}\n\n\nexport const DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {Dialog} from './DialogsItems/DialogsItem';\nimport {Message} from './Message/Message';\nimport {DialogsDataType, MassagesDataType} from '../../Redux/Store';\n\n\ntype propsDialogsType = {\n    newTextMassages: string\n    massagesData: Array<MassagesDataType>\n    dialogsData: Array<DialogsDataType>\n    addMessageCallback: (newText: string) => void\n    updateNewMessageText: (value: string) => void\n}\n\nexport function Dialogs(props: propsDialogsType) {\n\n    const dialogElements = props.dialogsData.map(d =>\n        <div key={d.id}>\n            <Dialog\n                id={d.id}\n                name={d.name}\n                avatar={d.avatar}\n            />\n        </div>\n    )\n    const dialogMessage = props.massagesData.map(d =>\n        <div key={d.id}>\n            <Message\n                message={d.massage}\n            />\n            {/*<AlternativeMessage*/}\n            {/*    message={d.massage}*/}\n            {/*/>*/}\n        </div>\n    )\n    const addMessageCallback = () => {\n        let validatedValue = props.newTextMassages.trim()\n        if (validatedValue) {\n            props.addMessageCallback(validatedValue)\n        }\n        props.updateNewMessageText('')\n    }\n    const updateNewMessageText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        e.currentTarget &&\n        props.updateNewMessageText(e.currentTarget.value)\n    }\n    const onChangeKeyPress = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === 'Enter') {\n            addMessageCallback()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n\n            <div className={s.dialogsItems}>\n                {dialogElements}\n            </div>\n\n            <div className={s.messeges}>\n                {dialogMessage}\n            </div>\n            <div>\n                <textarea\n                    value={props.newTextMassages}\n                    placeholder=\"Enter your message\"\n                    onChange={updateNewMessageText}\n                    onKeyPress={onChangeKeyPress}\n                />\n\n                <button onClick={addMessageCallback}>send</button>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/user.de6feba5.png\";","import axios from 'axios';\r\nimport React from 'react'\r\nimport {userType} from '../../Redux/usersPageReducer';\r\nimport s from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\n\r\n\r\ntype PropsUsersType = {\r\n    users: Array<userType>\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setUsers: (users: Array<userType>) => void\r\n}\r\n\r\nclass Users extends React.Component<PropsUsersType> {\r\n\r\n    componentDidMount() {\r\n        axios.get('https://social-network.samuraijs.com/api/1.0/users')\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {\r\n                    this.props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <img alt=\"\" src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                 className={s.userPhoto}/>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button onClick={() => this.props.unfollow(u.id)}>Unfollow</button>\r\n                                : <button onClick={() => this.props.follow(u.id)}>Follow</button>}\r\n\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            {/*<div>{'u.location.country'}</div>*/}\r\n                            {/*<div>{'u.location.city'}</div>*/}\r\n\r\n                        </span>\r\n                    </span>\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users","import {ActionType} from './Store';\r\n\r\n\r\nlet InitialState = {\r\n    users: []\r\n}\r\nexport type photosType = {\r\n    small:string\r\n    large:string\r\n}\r\n// export type locationType = {\r\n//     city: string\r\n//     country: string\r\n// }\r\nexport type userType = {\r\n    id: number\r\n    photos: photosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n   // location: locationType\r\n}\r\nexport type UsersStateType = {\r\n    users: Array<userType>\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW' as const\r\nconst UNFOLLOW = 'UNFOLLOW' as const\r\nconst SET_USERS = 'SET-USERS' as const\r\nexport const usersPageReducer = (state: UsersStateType = InitialState, action: ActionType): UsersStateType => {\r\n        switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...state.users, ...action.users]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userID: number) => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userID\r\n    } as const\r\n}\r\nexport const unfollowAC = (userID: number) => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userID\r\n    } as const\r\n\r\n}\r\nexport const setUsersAC = (users: Array<userType>) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    } as const\r\n\r\n}\r\nexport type FollowACType = ReturnType<typeof followAC>\r\nexport type UnfollowACType = ReturnType<typeof unfollowAC>\r\nexport type setUsersACType = ReturnType<typeof setUsersAC>","import {connect} from 'react-redux';\r\nimport {AppDispatch, AppStateType} from '../../Redux/Redux-Store';\r\nimport Users from './UsersOnClass';\r\nimport {followAC, setUsersAC, unfollowAC, userType} from '../../Redux/usersPageReducer';\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: AppDispatch) => {\r\n    return {\r\n        follow: (userID: number) => {\r\n            dispatch(followAC(userID))\r\n        },\r\n        unfollow: (userID: number) => {\r\n            dispatch(unfollowAC(userID))\r\n        },\r\n        setUsers: (users: Array<userType>) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\nimport './App.css';\nimport {Header} from './Componens/Header/Header';\nimport {Navbar} from './Componens/Navbar/Navbar';\nimport {Profile} from './Componens/Profile/Profile';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {News} from './Componens/News/News';\nimport {Music} from './Componens/Music/Music';\nimport {Settings} from './Componens/Settings/Settings';\nimport { DialogsContainer } from './Componens/Dialogs/DialogsContainer';\nimport {UsersContainer} from './Componens/Users/UsersContainer';\n\n\n\n\n\n\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\" render={() =><DialogsContainer/>}/>\n                    <Route path=\"/profile\" render={() =><Profile/>}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    {/*<Route path=\"/friends\" render={() => <Friends/>}/>*/}\n\n\n                </div>\n\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {v1} from 'uuid';\r\nimport {ActionType, SidebarType} from './Store';\r\n\r\nlet InitialState = {\r\n    friendsData: [\r\n        {\r\n            id: v1(),\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/avatars/4/d0344a04087644befce78124c6277bb1-bpthumb.jpg',\r\n            name: 'Igor'\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/avatars/2/d1b23ad972e736b7c0510b288875c3b6-bpthumb.jpg',\r\n            name: 'Maryna'\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/avatars/4/d0344a04087644befce78124c6277bb1-bpthumb.jpg',\r\n            name: 'Ragnar'\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: 'https://buddy.ghostpool.com/wp-content/uploads/group-avatars/34/1c7da6471476e42b543812f35ef23d2f-bpthumb.jpg',\r\n            name: 'Ruslan'\r\n        },\r\n    ]\r\n}\r\n\r\nexport const sidebarReducer = (store:SidebarType = InitialState, action: ActionType):SidebarType => {\r\nreturn store\r\n}\r\n","import { combineReducers, createStore} from 'redux';\r\nimport {profilePageReducer} from './profilePageReducer';\r\nimport {dialogPageReducer} from './dialogPageReducer';\r\nimport {sidebarReducer} from './sidebarReducer';\r\nimport { usersPageReducer } from './usersPageReducer';\r\n\r\n\r\nlet Reducers =  combineReducers({\r\n    profilePage:profilePageReducer,\r\n    dialogPage:dialogPageReducer,\r\n    sidebar:sidebarReducer,\r\n    usersPage:usersPageReducer\r\n})\r\n\r\nexport let store =  createStore(Reducers);\r\nexport type AppStateType = ReturnType<typeof Reducers>\r\nexport type StoreType = typeof store\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from './Redux/Redux-Store';\nimport {Provider} from 'react-redux';\n\n\n\nexport const renderEntireTree = () => {\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n}\n\nrenderEntireTree();\nstore.subscribe(renderEntireTree);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}